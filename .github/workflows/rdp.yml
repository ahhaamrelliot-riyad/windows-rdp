name: Setup ngrok and Remote Desktop

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  setup-ngrok:
    runs-on: windows-latest
    timeout-minutes: 360

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download ngrok
        run: Invoke-WebRequest https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip

      - name: Extract ngrok
        run: Expand-Archive ngrok.zip -DestinationPath .

      - name: Authenticate ngrok
        run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

      - name: Enable Remote Desktop
        run: |
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "UserAuthentication" -Value 1

      - name: Set Password for runneradmin
        run: |
          $secPass = ConvertTo-SecureString "P@ssw0rd!" -AsPlainText -Force
          Set-LocalUser -Name "runneradmin" -Password $secPass

      - name: Start ngrok Tunnel
        run: Start-Process -FilePath .\ngrok.exe -ArgumentList "tcp 3389 --log=stdout" -NoNewWindow -RedirectStandardOutput ngrok.log

      - name: Get Public URL
        id: get-url
        run: |
          $maxAttempts = 10
          $delay = 5
          for ($i = 1; $i -le $maxAttempts; $i++) {
            Write-Host "Attempting to get ngrok URL (Attempt $i)..."
            $logContent = Get-Content ./ngrok.log -ErrorAction SilentlyContinue
            $tunnelLine = $logContent | Select-String "url=tcp://(.+)"
            if ($tunnelLine) {
              $url = $tunnelLine.Matches.Groups[1].Value
              Write-Host "✅ Public URL Found: $url"
              echo "url=$url" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
              exit 0
            }
            Start-Sleep -Seconds $delay
          }
          Write-Error "❌ Failed to get ngrok URL after $maxAttempts attempts."
          exit 1
        shell: pwsh

      - name: Display Connection Info
        run: echo "✅ Connect using: ${{ steps.get-url.outputs.url }}"

      - name: Keep Alive
        run: Start-Sleep -Seconds 21000 # Keep alive for ~6 hours
        shell: pwsh
