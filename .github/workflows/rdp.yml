name: Windows RDP via ngrok

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 350

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Download ngrok
      run: |
        Invoke-WebRequest -Uri https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath .
      shell: powershell

    - name: Authenticate ngrok
      run: .\ngrok.exe authtoken "${{ secrets.NGROK_AUTH_TOKEN }}"
      shell: powershell

    - name: Enable Remote Desktop
      run: |
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "UserAuthentication" -Value 1
      shell: powershell

    - name: Set User Password
      run: |
        $password = "P@ssw0rd!"
        $user = "runneradmin"
        $securePassword = ConvertTo-SecureString $password -AsPlainText -Force
        Set-LocalUser -Name $user -Password $securePassword
      shell: powershell

    - name: Start ngrok Tunnel
      run: .\ngrok.exe tcp 3389 --log "ngrok.log"
      shell: cmd

    - name: Get Public URL
      id: get-url
      run: |
        for ($i=1; $i -le 15; $i++) {
          Write-Host "Attempting to get ngrok URL (Attempt $i)..."
          try {
            $response = Invoke-RestMethod -Method Get -Uri "http://127.0.0.1:4040/api/tunnels"
            $tunnel = $response.tunnels | Where-Object { $_.proto -eq "tcp" }
            if ($tunnel) {
              Write-Host "✅ Public URL Found: $($tunnel.public_url)"
              echo "url=$($tunnel.public_url)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
              exit 0
            }
          }
          catch {
            # Catch errors if API is not ready, and continue to next attempt
          }
          Start-Sleep -Seconds 5
        }
        Write-Error "❌ Failed to get ngrok URL after multiple attempts."
        exit 1
      shell: powershell

    - name: Display Connection Info
      run: echo "✅ Connect using: ${{ steps.get-url.outputs.url }}"
      # The 'shell' line below was causing the error. It's now removed as powershell is the default.

    - name: Keep Workflow Alive
      run: Start-Sleep -Seconds 20700
      shell: powershell
